# ==================== 服务器配置 ====================
SERVER_HOST=0.0.0.0
SERVER_PORT=38181

# 外部访问域名（用于生成正确的URL）
EXTERNAL_DOMAIN=ticketradar.izlx.me
# 是否使用HTTPS（Cloudflare处理HTTPS，后端使用HTTP）
USE_HTTPS=false

# ==================== 应用配置 ====================
# Flask应用密钥（生产环境请使用强随机字符串）
SECRET_KEY=docker-ticketradar-super-secret-key-change-this-in-production

# 数据库配置（Docker环境使用简单路径）
DATABASE_URL=sqlite:///ticketradar.db

# ==================== PushPlus推送配置 ====================
# 是否启用PushPlus推送
ENABLE_PUSHPLUS=true
# PushPlus令牌（从 http://www.pushplus.plus/ 获取）
PUSHPLUS_TOKEN=f3da240f668a4fa7ac8db1f9eaa16d39

# PushPlus群组推送配置（可选，用于不同始发地推送到不同群组）
# 香港始发地群组编码
PUSHPLUS_TOPIC_HKG=1
# 深圳始发地群组编码
PUSHPLUS_TOPIC_SZX=2
# 广州始发地群组编码
PUSHPLUS_TOPIC_CAN=3
# 澳门始发地群组编码
PUSHPLUS_TOPIC_MFM=4

# ==================== 监控配置 ====================
# 价格阈值（低于此价格时推送通知）
PRICE_THRESHOLD=1000
# 主循环检查间隔（分钟）
CHECK_INTERVAL=5
# 用户监控任务检查间隔（分钟）
USER_MONITOR_INTERVAL=7
# 默认出发地
DEFAULT_DEPARTURE=HKG

# ==================== 行程配置 ====================
# 行程类型（1=单程，2=往返）
TRIP_TYPE=2
# 出发日期
DEPART_DATE=2025-09-30
# 返程日期（往返行程时使用）
RETURN_DATE=2025-10-08

# ==================== API配置 ====================
# Trip.com API相关配置
# 请求头配置
USER_AGENT=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36
ACCEPT_LANGUAGE=zh-CN,zh;q=0.9,en;q=0.8
# API请求超时时间（秒）
REQUEST_TIMEOUT=30
# 最大重试次数
MAX_RETRIES=3
# 请求间隔（秒，避免频繁请求）
REQUEST_DELAY=2

# ==================== 数据处理配置 ====================
# 每次获取的最大航班数量
MAX_FLIGHTS_PER_REQUEST=50
# 数据缓存时间（分钟）
DATA_CACHE_DURATION=10
# 是否启用数据去重
ENABLE_DEDUPLICATION=true

# ==================== 通知配置 ====================
# 通知频率限制（同一航线多少分钟内不重复推送）
NOTIFICATION_COOLDOWN=60
# 是否启用价格变化通知
ENABLE_PRICE_CHANGE_NOTIFICATION=true
# 价格变化阈值（元，价格变化超过此值才通知）
PRICE_CHANGE_THRESHOLD=100

# ==================== 安全配置 ====================
# 是否启用调试模式（生产环境请设为false）
DEBUG=false
# 是否启用详细日志
VERBOSE_LOGGING=false
# 会话超时时间（小时）
SESSION_TIMEOUT=24

# ==================== 高级配置 ====================
# 日志级别（DEBUG, INFO, WARNING, ERROR）
LOG_LEVEL=INFO
# 日志文件最大大小（MB）
LOG_MAX_SIZE=10
# 保留的日志文件数量
LOG_BACKUP_COUNT=5

# ==================== Docker特定配置 ====================
# 容器时区
TZ=Asia/Shanghai
# Python环境
PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1

# ==================== 监控城市配置 ====================
# 主循环监控的城市列表（逗号分隔）
MAIN_MONITOR_CITIES=HKG,SZX,CAN,MFM
# 是否启用所有城市监控
ENABLE_ALL_CITIES_MONITOR=true

# ==================== 性能配置 ====================
# 并发请求数量
CONCURRENT_REQUESTS=4
# 数据库连接池大小
DB_POOL_SIZE=10
# 是否启用缓存
ENABLE_CACHE=true
