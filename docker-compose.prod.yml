version: '3.8'

services:
  ticketradar:
    build: .
    container_name: ticketradar-app
    restart: unless-stopped
    ports:
      - "38181:38181"
    env_file:
      - .env.docker
    volumes:
      - ticketradar_data:/app/data
      - ticketradar_logs:/app/logs
      - ./backups:/app/backups
    networks:
      - ticketradar-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:38181/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: ticketradar-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ticketradar_logs:/var/log/nginx
    depends_on:
      - ticketradar
    networks:
      - ticketradar-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 数据库备份服务
  backup:
    image: alpine:latest
    container_name: ticketradar-backup
    restart: unless-stopped
    volumes:
      - ticketradar_data:/data:ro
      - ./backups:/backups
    command: >
      sh -c "
        while true; do
          echo 'Creating backup...'
          cp /data/ticketradar.db /backups/ticketradar_backup_$$(date +%Y%m%d_%H%M%S).db
          find /backups -name 'ticketradar_backup_*.db' -mtime +7 -delete
          echo 'Backup completed'
          sleep 86400
        done
      "
    networks:
      - ticketradar-network

volumes:
  ticketradar_data:
    driver: local
  ticketradar_logs:
    driver: local

networks:
  ticketradar-network:
    driver: bridge
